import { ChainConfig, ChainInfo, Currency } from './types';
import { AccountData, OfflineSigner } from '@cosmjs/proto-signing';
import { StdSignature } from '@cosmjs/amino';
export interface SeiWallet {
	walletInfo: {
		windowKey: string;
		name: string;
		icon: string;
		website: string;
	};
	getOfflineSigner: (chainId: string) => Promise<OfflineSigner | undefined>;
	getAccounts: (chainId: string) => Promise<readonly AccountData[]>;
	connect: (chainId: string) => Promise<void>;
	disconnect: (chainId: string) => Promise<void>;
	suggestChain?: (config: ChainConfig) => Promise<void>;
	signArbitrary?: (chainId: string, signer: string, message: string) => Promise<StdSignature | undefined>;
	verifyArbitrary?: (chainId: string, signingAddress: string, data: string, signature: StdSignature) => Promise<boolean>;
	isMobileSupported: boolean;
}
export declare const FIN_WALLET: SeiWallet;
export declare const COMPASS_WALLET: SeiWallet;
export declare const KEPLR_WALLET: SeiWallet;
export declare const LEAP_WALLET: SeiWallet;
export declare const SUPPORTED_WALLETS: SeiWallet[];
export declare const getChainSuggest: (chainInfo?: ChainInfo, currencies?: Currency[]) => ChainConfig;
